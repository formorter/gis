### Environment
[environment]

## Option: package.* (boolean)
#          Disable installed package by setting false.
; package.key =

## Option: component.* (boolean)
#          Enable optional component by setting true. Or disable component by
#          setting false.
; component.key =

# To enable optional components, use these options:
; component.raster_mosaic = true
; component.wfsclient = true

# To disable components, use these options:
; component.sentry = false
; component.pyramid = false
; component.auth = false
; component.resource = false
; component.resmeta = false
; component.social = false
; component.spatial_ref_sys = false
; component.layer = false
; component.feature_layer = false
; component.feature_description = false
; component.feature_attachment = false
; component.render = false
; component.svg_marker_library = false
; component.webmap = false
; component.file_storage = false
; component.vector_layer = false
; component.lookup_table = false
; component.postgis = false
; component.raster_layer = false
; component.raster_style = false
; component.wfsserver = false
; component.wmsclient = false
; component.wmsserver = false
; component.tmsclient = false
; component.file_upload = false
; component.audit = false

## Option: logging.level (text) (default: WARNING)
#          Default logging level which is set to root logger.
; logging.level = WARNING

## Option: logging.timestamp (boolean) (default: false)
#          Print timestamps in log records or not.
; logging.timestamp = false

## Option: logging.ini_config (text)
#          Deprecated. Load logging configuration from ini-style file.
; logging.ini_config =

## Option: logger.* (text)
#          Set logging level of the specific logger in the following format:
#          qualified_name:level. Where qualified_name is a dotted python logger
#          name, nextgisweb.env for example. Any key name can be used and it
#          affects nothing. But can be used when overriding options.
; logger.key =

## Option: logger.waitress (text) (default: waitress:error)
#          By default waitress (builtin HTTP server) logger level is set to
#          ERROR. It's possible to override this setting here.
; logger.waitress = waitress:error

### Component 'core'
[core]
## Option: system.name (text) (default: NextGIS Web)
; system.name = NextGIS Web

## Option: system.full_name (text)
system.full_name = Geoportal autoconf

## Option: database.host (text) (default: localhost)
database.host = localhost

## Option: database.name (text) (default: nextgisweb)
database.name = dbngw

## Option: database.user (text) (default: nextgisweb)
database.user = ngw_adm

## Option: database.password (text)
database.password = 12345678

## Option: database.pwfile (text)
; database.pwfile =

## Option: database.lock_timeout (timedelta) (default: 30)
; database.lock_timeout = 30

## Option: sdir (text) (required)
#          Path to filesytem data storage where data stored along with database.
#          Other components file_upload create subdirectories in it.
sdir = /home/server/ngw/data

## Option: backup.path (text)
#          Path to directory in filesystem where backup created if target
#          destination is not specified.
; backup.path =

## Option: backup.filename (text) (default: %Y%m%d-%H%M%S.ngwbackup)
#          File name template (passed to strftime) for filename in backup.path if
#          backup target destination is not specified.
; backup.filename = %Y%m%d-%H%M%S.ngwbackup

## Option: packages.ignore (text)
#          Deprecated, use environment package.* option instead.
; packages.ignore =

## Option: components.ignore (text)
#          Deperected, use environment component.* option instead.
; components.ignore =

## Option: locale.default (text) (default: en)
locale.default = ru

## Option: locale.available (list<text>) (default: en, ru)
; locale.available = en, ru

## Option: support_url (text) (default: https://nextgis.com/contact/)
; support_url = https://nextgis.com/contact/

## Option: debug (boolean) (default: false)
#          Enable additional debug tools.
; debug = false

### Component 'sentry'
[sentry]

## Option: dsn (text)
; dsn =

## Option: environment (text)
; environment =

## Option: shutdown_timeout (integer) (default: 30)
; shutdown_timeout = 30

### Component 'pyramid'
[pyramid]

## Option: help_page.enabled (boolean) (default: true)
; help_page.enabled = true

## Option: help_page.url (text) (default: https://nextgis.com/redirect/{lang}/help/)
; help_page.url = https://nextgis.com/redirect/{lang}/help/

## Option: favicon (text) (default: /home/server/ngw/nextgisweb/nextgisweb/static/img/favicon.ico)
; favicon = /home/server/ngw/nextgisweb/nextgisweb/static/img/favicon.ico

## Option: company_url (text) (default: https://nextgis.com)
; company_url = https://nextgis.com

## Option: desktop_gis_example (text) (default: NextGIS QGIS)
; desktop_gis_example = NextGIS QGIS

## Option: nextgis_external_docs_links (text) (default: True)
; nextgis_external_docs_links = True

## Option: backup.download (boolean) (default: false)
; backup.download = false

## Option: session.cookie.name (text) (default: ngw-sid)
#          Session cookie name
; session.cookie.name = ngw-sid

## Option: session.cookie.max_age (timedelta) (default: 7d)
#          Session cookie max_age
; session.cookie.max_age = 7d

## Option: session.activity_delta (timedelta) (default: 10m)
#          Session last activity update time delta in seconds.
; session.activity_delta = 10m

## Option: debugtoolbar.enabled (boolean)
; debugtoolbar.enabled =

## Option: debugtoolbar.hosts (text)
; debugtoolbar.hosts =

### Component 'auth'
[auth]

## Option: register (boolean) (default: false)
#          Allow user registration.
; register = false

## Option: login_route_name (text) (default: auth.login)
#          Name of route for login page.
; login_route_name = auth.login

## Option: logout_route_name (text) (default: auth.logout)
#          Name of route for logout page.
; logout_route_name = auth.logout
## Option: activity_delta (timedelta) (default: 10m)
#          User last activity update time delta in seconds.
; activity_delta = 10m

## Option: user_limit (integer)
#          Limit of enabled users
; user_limit =

## Option: provision.administrator.password (text) (default: admin)
; provision.administrator.password = admin

## Option: provision.administrator.oauth_subject (text)
; provision.administrator.oauth_subject =

## Option: oauth.enabled (boolean) (default: false)
#          Enable OAuth authentication.
; oauth.enabled = false

## Option: oauth.default (boolean) (default: false)
#          Preffer OAuth authentication over local.
; oauth.default = false

## Option: oauth.register (boolean) (default: true)
#          Allow registering new users via OAuth.
; oauth.register = true

## Option: oauth.local_auth (boolean) (default: true)
#          Allow authentication with local password for OAuth users.
; oauth.local_auth = true

## Option: oauth.bind (boolean) (default: true)
#          Allow binding local user to OAuth user.
; oauth.bind = true

## Option: oauth.client.id (text)
#          OAuth client ID
; oauth.client.id =

## Option: oauth.client.secret (text)
#          OAuth client secret
; oauth.client.secret =

## Option: oauth.server.password (boolean) (default: false)
#          Use password grant type instead of authorization code grant type.
; oauth.server.password = false

## Option: oauth.server.token_endpoint (text)
#          OAuth token endpoint URL.
; oauth.server.token_endpoint =

## Option: oauth.server.introspection_endpoint (text)
#          OAuth token introspection endpoint URL.
; oauth.server.introspection_endpoint =

## Option: oauth.server.introspection_method (text) (default: POST)
#          Workaround for NGID OAuth implementation.
; oauth.server.introspection_method = POST

## Option: oauth.server.auth_endpoint (text)
#          OAuth authorization code endpoint URL.
; oauth.server.auth_endpoint =

## Option: oauth.server.authorization_header (text)
#          Add Authorization HTTP header to requests to OAuth server.
; oauth.server.authorization_header =

## Option: oauth.server.logout_endpoint (text)
#          OAuth logout endpoint URL.
; oauth.server.logout_endpoint =

## Option: oauth.profile.endpoint (text)
#          OpenID Connect endpoint URL
; oauth.profile.endpoint =

## Option: oauth.profile.subject.attr (text) (default: sub)
#          OAuth profile subject identifier
; oauth.profile.subject.attr = sub

## Option: oauth.profile.keyname.attr (text) (default: preferred_username)
#          OAuth profile keyname (user name)
; oauth.profile.keyname.attr = preferred_username

## Option: oauth.profile.display_name.attr (text) (default: name)
#          OAuth profile display name
; oauth.profile.display_name.attr = name

## Option: oauth.profile.member_of.attr (text)
; oauth.profile.member_of.attr =

## Option: oauth.profile.member_of.map (list<text>)
; oauth.profile.member_of.map =

## Option: oauth.profile.sync_timedelta (timedelta)
#          Minimum time delta between profile synchronization with OAuth server.
; oauth.profile.sync_timedelta =

## Option: policy.local.lifetime (timedelta) (default: 1d)
#          Local authentication lifetime.
; policy.local.lifetime = 1d

## Option: policy.local.refresh (timedelta) (default: 1h)
#          Refresh local authentication lifetime interval.
; policy.local.refresh = 1h

### Component 'resource'
[resource]

## Option: disabled_cls (list<text>)
#          Resource classes disabled for creation.
; disabled_cls =

## Option: disable.* (boolean) (default: false)
#          Disable creation of specific resources.
; disable.key = false

## Option: quota.limit (integer)
; quota.limit =

## Option: quota.resource_cls (list<text>)
; quota.resource_cls =

## Option: quota.resource_by_cls (text)
; quota.resource_by_cls =

## Option: everyone_permissions (text)
#          Permissions for user Everyone
; everyone_permissions =

### Component 'file_storage'
[file_storage]

## Option: path (text)
path = /home/server/ngw/files

## Option: cleanup_keep_interval (text) (default: 4:00:00)
; cleanup_keep_interval = 4:00:00

### Component 'spatial_ref_sys'
[spatial_ref_sys]

## Option: catalog.enabled (boolean) (default: false)
; catalog.enabled = false

## Option: catalog.url (text)
; catalog.url =

### Component 'feature_layer'
[feature_layer]

## Option: identify.attributes (boolean) (default: true)
#          Show attributes in identification.
; identify.attributes = true

## Option: search.nominatim (boolean) (default: true)
#          Use Nominatim while searching
; search.nominatim = true

### Component 'render'
[render]

## Option: tile_cache.enabled (boolean) (default: true)
; tile_cache.enabled = true

## Option: tile_cache.track_changes (boolean) (default: false)
; tile_cache.track_changes = false

## Option: tile_cache.seed (boolean) (default: false)
; tile_cache.seed = false

### Component 'svg_marker_library'
[svg_marker_library]

## Option: path (list<text>) (default: /home/server/ngw/nextgisweb/nextgisweb/svg_marker_library/preset/)
#          Search paths for SVG files.
; path = /home/server/ngw/nextgisweb/nextgisweb/svg_marker_library/preset/

### Component 'webmap'
[webmap]

## Option: basemaps (text) (default: /home/server/ngw/nextgisweb/nextgisweb/webmap/basemaps.json)
#          Basemaps description file.
; basemaps = /home/server/ngw/nextgisweb/nextgisweb/webmap/basemaps.json

## Option: bing_apikey (text)
#          Bing Maps API key.
; bing_apikey =

## Option: annotation (boolean) (default: true)
#          Turn on / off annotations.
; annotation = true

## Option: enable_social_networks (boolean) (default: true)
; enable_social_networks = true

### Component 'vector_layer'
[vector_layer]

## Option: show_create_mode (boolean) (default: false)
; show_create_mode = false

### Component 'wfsclient'
[wfsclient]

## Option: user_agent (text) (default: NextGIS Web)
; user_agent = NextGIS Web

## Option: timeout (float) (default: 60)
; timeout = 60

### Component 'wmsclient'
[wmsclient]

## Option: user_agent (text) (default: NextGIS Web)
; user_agent = NextGIS Web

### Component 'tmsclient'
[tmsclient]

## Option: nextgis_geoservices.layers (text) (default: https://geoservices.nextgis.com/config/maps)
; nextgis_geoservices.layers = https://geoservices.nextgis.com/config/maps

## Option: nextgis_geoservices.url_template (text) (default: https://geoservices.nextgis.com/raster/{layer}/{z}/{x}/{y}.png)
; nextgis_geoservices.url_template = https://geoservices.nextgis.com/raster/{layer}/{z}/{x}/{y}.png

## Option: user_agent (text) (default: NextGIS Web)
; user_agent = NextGIS Web

## Option: timeout (float) (default: 15)
; timeout = 15

### Component 'file_upload'
[file_upload]

## Option: path (text)
 path = /home/server/ngw/upload

## Option: max_size (integer) (default: 8589934592)
; max_size = 8589934592

## Option: tus.enabled (boolean) (default: true)
; tus.enabled = true

## Option: tus.chunk_size.default (integer) (default: 16777216)
; tus.chunk_size.default = 16777216

## Option: tus.chunk_size.minimum (integer) (default: 1048576)
; tus.chunk_size.minimum = 1048576

### Component 'audit'
[audit]

## Option: enabled (boolean) (default: false)
; enabled = false

## Option: elasticsearch.host (text)
; elasticsearch.host =

## Option: elasticsearch.port (integer) (default: 9200)
; elasticsearch.port = 9200

## Option: elasticsearch.index.prefix (text) (default: nextgisweb-audit)
; elasticsearch.index.prefix = nextgisweb-audit

## Option: elasticsearch.index.suffix (text) (default: %Y.%m)
; elasticsearch.index.suffix = %Y.%m

## Option: file (text)
#          Log events in ndjson format
; file =

## Option: request_method.include (list<text>)
#          Log only given request methods
; request_method.include =

## Option: request_method.exclude (list<text>)
#          Don't log given request methods
; request_method.exclude =

## Option: request_path.include (list<text>)
#          Log only given request path prefixes
; request_path.include =

## Option: request_path.exclude (list<text>)
#          Don't log given request path prefixes
; request_path.exclude =
